{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Web-Projects\\\\React\\\\react udemy\\\\01-starting-setup\\\\54-React-Expense-Tracker\\\\src\\\\components\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpenseFilter/ExpenseFilter\";\nimport Card from \"./Card\";\nimport \"./css/Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  // Getting logs of dates on change\n  const [filterYear, setFilteredYear] = useState(\"2021\");\n  const filterChangeHandler = selectedYear => {\n    // console.log('Expenses.js');\n    // console.log(selectedYear)\n    setFilteredYear(selectedYear);\n  };\n\n  // filtered dates from array of expenses\n  const filteredExpensesByDate = props.items.filter(expense => expense.date.getFullYear().toString() === filterYear);\n  let emptyExpenseList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expense found!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 26\n  }, this);\n  if (filteredExpensesByDate.length > 0) {\n    emptyExpenseList = filteredExpensesByDate.map((expense, index) => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onChangeFilter: filterChangeHandler,\n      defaultYear: filterYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), emptyExpenseList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"0EOePamVg0iCcCJ4YQvzfzNooXc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpensesFilter","Card","jsxDEV","_jsxDEV","Expenses","props","_s","filterYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpensesByDate","items","filter","expense","date","getFullYear","toString","emptyExpenseList","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","title","amount","className","onChangeFilter","defaultYear","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Web-Projects/React/react udemy/01-starting-setup/54-React-Expense-Tracker/src/components/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpenseFilter/ExpenseFilter\";\r\nimport Card from \"./Card\";\r\nimport \"./css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  // Getting logs of dates on change\r\n  const [filterYear, setFilteredYear] = useState(\"2021\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    // console.log('Expenses.js');\r\n    // console.log(selectedYear)\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  // filtered dates from array of expenses\r\n  const filteredExpensesByDate = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filterYear\r\n  );\r\n\r\n\r\n  let emptyExpenseList = <p>No expense found!!!</p>\r\n\r\n  if(filteredExpensesByDate.length > 0){\r\n    emptyExpenseList = filteredExpensesByDate.map((expense, index) => (\r\n      <ExpenseItem\r\n        key={index}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        onChangeFilter={filterChangeHandler}\r\n        defaultYear={filterYear}\r\n      />\r\n\r\n      <h2>Let's get started!</h2>\r\n\r\n    {emptyExpenseList}\r\n    \r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,UAAU,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC5C;IACA;IACAF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAC9CC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,UACzD,CAAC;EAGD,IAAIW,gBAAgB,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEjD,IAAGZ,sBAAsB,CAACa,MAAM,GAAG,CAAC,EAAC;IACnCN,gBAAgB,GAAGP,sBAAsB,CAACc,GAAG,CAAC,CAACX,OAAO,EAAEY,KAAK,kBAC3DvB,OAAA,CAACJ,WAAW;MAEV4B,KAAK,EAAEb,OAAO,CAACa,KAAM;MACrBC,MAAM,EAAEd,OAAO,CAACc,MAAO;MACvBb,IAAI,EAAED,OAAO,CAACC;IAAK,GAHdW,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF,CAAC;EACJ;EAEA,oBACEpB,OAAA,CAACF,IAAI;IAAC4B,SAAS,EAAC,UAAU;IAAAV,QAAA,gBACxBhB,OAAA,CAACH,cAAc;MACb8B,cAAc,EAAErB,mBAAoB;MACpCsB,WAAW,EAAExB;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAEFpB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE5BL,gBAAgB;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEX;AAACjB,EAAA,CAzCQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}